name: "Setup balena CLI Action"
description: "Setup the balena CLI in a GitHub Actions workflow"
branding:
  icon: "code"
  color: "blue"
inputs:
  cli-version:
    description: "balena CLI version to install (example: `v18.1.9`)"
    required: false
    default: latest
  balena-token:
    description: "balenaCloud API token to login automatically"
    required: false

# Builds and then runs as separate steps as default GitHub method does not allow passing build args
runs:
  using: "composite"
  steps:
    - name: Check runner OS
      id: check_os
      shell: bash
      run: |
        case ${{ runner.os }} in
          Linux) echo "slug=linux" >> "${GITHUB_OUTPUT}" ;;
          Windows) echo "slug=windows" >> "${GITHUB_OUTPUT}" ;;
          macOS) echo "slug=macOS" >> "${GITHUB_OUTPUT}" ;;
          *) echo "Unsupported OS: ${{ runner.os }}" ; exit 1 ;;
        esac

    - name: Check runner Arch
      id: check_arch
      shell: bash
      run: |
        case ${{ runner.arch }} in
          X64) echo "slug=x64" >> "${GITHUB_OUTPUT}" ;;
          ARM64) echo "slug=arm64" >> "${GITHUB_OUTPUT}" ;;
          *) echo "Unsupported Arch: ${{ runner.arch }}" ; exit 1 ;;
        esac

    - name: Check CLI version
      id: check_version
      shell: bash
      env:
        INPUT: ${{ inputs.cli-version }}
      run: |
        latest="$(curl -s https://api.github.com/repos/balena-io/balena-cli/releases/latest | jq -r '.tag_name')"

        case ${INPUT} in
          latest|"") echo "slug=${latest}" >> "${GITHUB_OUTPUT}" ;;
          *) echo "slug=v${INPUT/v/}" >> "${GITHUB_OUTPUT}" ;;
        esac

    # e.g. https://github.com/balena-io/balena-cli/releases/download/v18.1.9/balena-cli-v18.1.9-linux-arm64-standalone.zip
    - name: Download balena CLI
      shell: bash
      env:
        OS: ${{ steps.check_os.outputs.slug }}
        ARCH: ${{ steps.check_arch.outputs.slug }}
        VERSION: ${{ steps.check_version.outputs.slug }}
      run: |
        set -x
        curl -fsSL "https://github.com/balena-io/balena-cli/releases/download/${VERSION}/balena-cli-${VERSION}-${OS}-${ARCH}-standalone.zip" -o "${{ runner.temp }}/balena-cli.zip"

    - name: Unpack balena CLI
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
      run: |
        unzip "${{ runner.temp }}/balena-cli.zip" -d "${GITHUB_ACTION_PATH}"
        echo "${GITHUB_ACTION_PATH}/balena-cli" >> "${GITHUB_PATH}"

    - name: Print balena CLI version
      shell: bash
      run: balena version

    - name: Login to balenaCloud
      if: inputs.balena-token != ''
      shell: bash
      run: |
        balena login --token "${{ inputs.balena-token }}"
        balena whoami
